import example.*

describe "efectos de logan,frank y los doctores"
    {
	const logan = new Persona()
	const frank = new Persona()
    const malaria = new EnfermedadInfecciosa()
    const otitis = new EnfermedadInfecciosa()
    const lupus = new EnfermedadAutoinmune(celulasQueAmenazo=10000)
    const house = new JefeDepartamento()
    //const cameron = new Medicos()
    const muerte = new LaMuerte()
    
test "Caso de prueba hecho por Lucas:Aumentar la temperatura de Logan "  
    {  
     logan.temp(36)
     malaria.celulasQueAmenazo(500)
     
     logan.contraerEnfermedad(malaria)  
     
	 malaria.causaEfecto(logan)
	 
     assert.equals(36.5,logan.temp())
    }
test "Caso de prueba hecho por Lucas:Aumentar mucho la temperatura de Logan " 
    { 
     logan.temp(36)
     logan.celulas(3000000)
     
     malaria.celulasQueAmenazo(500)
     otitis.celulasQueAmenazo(100)
     lupus.celulasQueAmenazo(10000)
     
     logan.contraerEnfermedad(malaria)  
     logan.contraerEnfermedad(otitis)
     logan.contraerEnfermedad(lupus)  
     
     malaria.causaEfecto(logan)
     otitis.causaEfecto(logan)	 
	 lupus.causaEfecto(logan)
	 logan.viviUnDia()
	 
     assert.equals(2036,logan.temp())
    }
test "Nr.1:Hacer que frank contraiga malaria de 800 células dañadas"//OK
    {
     frank.temp(36)
     malaria.celulasQueAmenazo(800)
	 frank.contraerEnfermedad(malaria)
	 malaria.causaEfecto(frank)
     assert.equals(36.8,frank.temp())
    }
test "Nro.2:Hacer que una malaria(la que contrajo Logan se reproduzca)"//OK
    {
     malaria.celulasQueAmenazo(500)
	 logan.contraerEnfermedad(malaria)
	 malaria.reproducirCelulas()
	 assert.equals(1000,malaria.celulasQueAmenazo())
    }
test "Nro.3:Hacer que Logan viva un día de su vida"
//preguntar.Es lo que pide el enunciado?
    {
     logan.temp(36)
     logan.celulas(3000000)
     
     logan.incrementarTemp(0.5)
     logan.incrementarTemp(0.1)
     
     malaria.celulasQueAfecto(500)
     otitis.celulasQueAfecto(100)
     lupus.celulasQueAfecto(10000)
     
     logan.contraerEnfermedad(malaria)
	 logan.contraerEnfermedad(lupus)
	 logan.contraerEnfermedad(otitis)
	 
	 logan.destruirCelulas(10000)
	 
	 assert.equals(2990000,logan.celulas())
     assert.equals(36.6,logan.temp())   
    }
test "Nro.4A:Que el sistema permita verificar,
la cantidad de células de Logan que estén amenazadas por 
enfermedades agresivas" //preguntar ,es lo que pide el enunciado?
    {
     logan.temp(36)
     logan.celulas(3000000)
     
     malaria.celulasQueAmenazo(500)
     otitis.celulasQueAmenazo(100)
     lupus.celulasQueAmenazo(10000)
     
     logan.contraerEnfermedad(malaria)
	 logan.contraerEnfermedad(lupus)
	 logan.contraerEnfermedad(otitis)
	 
     assert.equals(3000000,logan.celulas())   
	
    }
test "Nro.4B:Que el sistema permita verificar,la enfermedad
de Logan que más células afecte" //OK
    {
     logan.temp(36)
     logan.celulas(3000000)
     
     malaria.celulasQueAmenazo(500)
     otitis.celulasQueAmenazo(100)
     lupus.celulasQueAmenazo(10000)
     
	 logan.contraerEnfermedad(malaria)
	 logan.contraerEnfermedad(lupus)
	 logan.contraerEnfermedad(otitis)
	 
	 malaria.causaEfecto(logan)
	 otitis.causaEfecto(logan)
	 lupus.causaEfecto(logan)
	 
     assert.equals(lupus,logan.enfermedadQueMasAfecta())
	
	}
test "Nro.4C:Si Logan está en coma,lo que sucede si su
temperatura es 45° o si tiene menos de 1.000.000 de células"
//preguntar.La cantidad de celulas es mayor 
//a 1.000.000 y su temp no es mayor o igual a 45°,entonces
//devuelve que NO estaEnComa()?
    { 
     logan.temp(36)
     logan.celulas(3000000)
     
     malaria.celulasQueAmenazo(500)
     otitis.celulasQueAmenazo(100)
     lupus.celulasQueAmenazo(10000)
     
     logan.contraerEnfermedad(malaria)
     logan.contraerEnfermedad(lupus)
	 logan.contraerEnfermedad(otitis)
	 
	 malaria.causaEfecto(logan)
	 otitis.causaEfecto(logan)
	 lupus.causaEfecto(logan)
	 
	 assert.notThat(logan.estaEnComa())
    }
    
/*Parte 2 */

/* 
test "Nro.1:Hacer que la malaria se atenúe en 100 células 
y el lupus en 500 células."
    {
     
     
	}
test "Nro.2:Hacer que Cameron atienda a Logan."
    {
     cameron.atendePaciente(logan)
     
     assert.that(logan.medicamento(2250))	
    	
    }
   
  
test"Nro.3:Existen médicos que son jefes de departamento, 
como House,que cuando tienen que atender a un paciente, 
no le administran medicación sino que les dicen a uno de sus
subordinados que lo hagan. Hacer que House atienda a Cameron."

    {
    house.teOrdeno(cameron)
    cameron.atendePaciente(self)
    assert.that()
    }
*/

test "Nro.4:Hacer que House contraiga la Muerte. 
La Muerte actúa disminuyendo toda la temperatura de la 
persona y no se atenúa con ningún medicamento.
No afecta ninguna célula(no tiene sentido,ya que afecta
a la persona entera) y es extremadamente agresiva"//OK
{
 /*falla el test cuando descomento el metodo contraerEnfermedad	
 de los medicos*/
 house.temp(36)
 
 house.contraerEnfermedad(muerte)
 
 muerte.causaEfecto(house)
 
 assert.equals(0,house.temp())

}
}
